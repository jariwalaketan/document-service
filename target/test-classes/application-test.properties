# Test configuration for JWT authentication
quarkus.oidc.enabled=true
quarkus.oidc.auth-server-url=http://localhost:8080/auth
quarkus.oidc.client-id=document-service
quarkus.oidc.credentials.secret=test-secret
quarkus.oidc.authentication.redirect-path=/login
quarkus.oidc.token.issuer=any

# Mock JWT configuration
quarkus.oidc.token.verification.signature.algorithm=HS256
quarkus.oidc.token.verification.signature.key=test-key

# Mock JWT claims for different tokens
quarkus.oidc.token.claims.mapping.tenant_id=tenant_id
quarkus.oidc.token.claims.mapping.groups=groups

# Mock token validation
quarkus.oidc.token.verification.require-nonce=false
quarkus.oidc.token.verification.require-exp=false
quarkus.oidc.token.verification.require-iat=false

# Mock token mapping
quarkus.oidc.token.verification.claims.mapping.tenant_id=tenant_id
quarkus.oidc.token.verification.claims.mapping.groups=groups

# Mock token validation for specific tokens
quarkus.oidc.token.verification.mock-tokens.mock.admin.token.claims={"sub":"test-admin","groups":["admin"],"tenant_id":"test-tenant"}
quarkus.oidc.token.verification.mock-tokens.mock.viewer.token.claims={"sub":"test-viewer","groups":["viewer"],"tenant_id":"test-tenant"}
quarkus.oidc.token.verification.mock-tokens.mock.different.tenant.token.claims={"sub":"test-viewer","groups":["viewer"],"tenant_id":"different-tenant"}

# Test database configuration
quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
quarkus.datasource.password=password
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
quarkus.hibernate-orm.database.generation=drop-and-create

# HTTP configuration
quarkus.http.port=8081 